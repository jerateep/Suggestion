// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGO.Web.Data;

namespace SGO.Web.Migrations
{
    [DbContext(typeof(MySQLContext))]
    [Migration("20200201161819_addSGOType_Status")]
    partial class addSGOType_Status
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SGO.Models.MySQL.SGO_Approver", b =>
                {
                    b.Property<int>("App_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("App_number")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("App_pers_id")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SGO_ID")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status_id")
                        .HasColumnType("int");

                    b.Property<string>("cod_creator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("cod_update")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("dtm_create")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("dtm_update")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("txt_comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("App_id");

                    b.ToTable("SGO_Approver");
                });

            modelBuilder.Entity("SGO.Models.MySQL.SGO_Department", b =>
                {
                    b.Property<int>("dep_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("dep_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("dep_id");

                    b.ToTable("SGO_Department");
                });

            modelBuilder.Entity("SGO.Models.MySQL.SGO_HEAD", b =>
                {
                    b.Property<string>("SGO_ID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("Dep_ID")
                        .HasColumnType("int");

                    b.Property<string>("Detail_Future")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Detail_Now")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Detail_Result")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SGOType_ID")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status_id")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("cod_Requester")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("cod_creator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("cod_update")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("dtm_Request")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("dtm_create")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("dtm_update")
                        .HasColumnType("datetime(6)");

                    b.HasKey("SGO_ID");

                    b.ToTable("SGO_HEAD");
                });

            modelBuilder.Entity("SGO.Models.MySQL.SGO_Status", b =>
                {
                    b.Property<int>("Status_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cod_group")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Status_desc")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Status_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Status_id");

                    b.ToTable("SGO_Status");
                });

            modelBuilder.Entity("SGO.Models.MySQL.SGO_TEAM", b =>
                {
                    b.Property<int>("Team_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("SGO_ID")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status_id")
                        .HasColumnType("int");

                    b.Property<string>("Team_number")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("cod_creator")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("cod_update")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("dtm_create")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("dtm_update")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("pers_id")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("txt_comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Team_id");

                    b.ToTable("SGO_TEAM");
                });

            modelBuilder.Entity("SGO.Models.MySQL.SGO_Type", b =>
                {
                    b.Property<int>("SGOType_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cod_group")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SGOType_Status")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SGOType_desc")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SGOType_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SGOType_ID");

                    b.ToTable("SGO_Type");
                });
#pragma warning restore 612, 618
        }
    }
}
